{"version":3,"file":"my-lib.js","sources":["../src/globals.ts","../src/manageCreeps.ts","../src/index.ts"],"sourcesContent":["export const creeps: Record<Room[\"name\"], Creep[]> = {}","import { creeps } from \"./globals\";\n\nexport const manageCreeps = () => {\n  if (Game.time % 100 === 0) {\n    // Cleanup Memory\n    for (const name in Memory.creeps) {\n      if (!(name in Game.creeps)) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete Memory.creeps[name];\n      }\n    }\n  }\n\n  for (const name in Game.creeps) {\n    const creep = Game.creeps[name];\n    if (!creep.my) {\n      continue;\n    }\n    const room = creep.memory.room || creep.room.name;\n    creeps[room] = creeps[room] || [];\n    creeps[room].push(creep);\n  }\n};\n\nexport const spawn = (r: Room | Room[\"name\"]) => {\n  if (typeof r === \"string\") r = Game.rooms[r];\n\n  const roomCreeps = creeps[r.name] ?? [];\n  let body: BodyPartConstant[] = [];\n  let role: string = \"\";\n  if (roomCreeps.length < 3) {\n    // Short on hands, spawn some basic boys\n    if (r.energyAvailable >= 250) {\n      body = [\"work\", \"carry\", \"move\", \"move\"];\n      role = \"basic-worker\";\n    }\n  }\n\n  if (body.length) {\n    // find a spawn\n    const spawns = r.find(FIND_MY_SPAWNS, {\n      filter: (s) => !Boolean(s.spawning),\n    });\n    if (spawns.length) {\n      const spawnStatus = spawns\n        .pop()\n        ?.spawnCreep(\n          body,\n          [r.name, Game.time, role].filter(Boolean).join(\":\"),\n          {\n            memory: {\n              room: r.name,\n              role: role,\n            },\n          }\n        );\n        if (spawnStatus === OK) {\n          console.log(\"Spawned a screep!\")\n        } else {\n          console.log(\"Failed to spawn a screep!\", spawnStatus)\n        }\n    }\n  }\n};\n","import { creeps } from \"./globals\";\nimport { manageCreeps, spawn } from \"./manageCreeps\";\nexport const loop = () => {\n  manageCreeps();\n  for (const room in Game.rooms) {\n    // Do all room-specific logicing here\n    spawn(room);\n  }\n};\n"],"names":["creeps","manageCreeps","name","creep","room","spawn","r","roomCreeps","_a","body","role","spawns","spawnStatus","_b","loop"],"mappings":"gFAAO,MAAMA,EAAwC,CAAC,ECEzCC,EAAe,IAAM,CAC5B,GAAA,KAAK,KAAO,MAAQ,EAEX,UAAAC,KAAQ,OAAO,OAClBA,KAAQ,KAAK,QAEV,OAAA,OAAO,OAAOA,CAAI,EAKpB,UAAAA,KAAQ,KAAK,OAAQ,CACxB,MAAAC,EAAQ,KAAK,OAAOD,CAAI,EAC1B,GAAA,CAACC,EAAM,GACT,SAEF,MAAMC,EAAOD,EAAM,OAAO,MAAQA,EAAM,KAAK,KAC7CH,EAAOI,CAAI,EAAIJ,EAAOI,CAAI,GAAK,CAAA,EACxBJ,EAAAI,CAAI,EAAE,KAAKD,CAAK,CACzB,CACF,EAEaE,EAASC,GAA2B,SAC3C,OAAOA,GAAM,WAAcA,EAAA,KAAK,MAAMA,CAAC,GAE3C,MAAMC,GAAaC,EAAAR,EAAOM,EAAE,IAAI,IAAb,KAAAE,EAAkB,CAAA,EACrC,IAAIC,EAA2B,CAAA,EAC3BC,EAAe,GASnB,GARIH,EAAW,OAAS,GAElBD,EAAE,iBAAmB,MACvBG,EAAO,CAAC,OAAQ,QAAS,OAAQ,MAAM,EAChCC,EAAA,gBAIPD,EAAK,OAAQ,CAET,MAAAE,EAASL,EAAE,KAAK,eAAgB,CACpC,OAAS,GAAM,CAAS,EAAE,QAAQ,CACnC,EACD,GAAIK,EAAO,OAAQ,CACX,MAAAC,GAAcC,EAAAF,EACjB,IAAA,IADiB,YAAAE,EAEhB,WACAJ,EACA,CAACH,EAAE,KAAM,KAAK,KAAMI,CAAI,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EAClD,CACE,OAAQ,CACN,KAAMJ,EAAE,KACR,KAAAI,CACF,CACF,GAEEE,IAAgB,GAClB,QAAQ,IAAI,mBAAmB,EAEvB,QAAA,IAAI,4BAA6BA,CAAW,CAE1D,CACF,CACF,EC7DaE,EAAO,IAAM,CACXb,IACF,UAAAG,KAAQ,KAAK,MAEtBC,EAAMD,CAAI,CAEd"}